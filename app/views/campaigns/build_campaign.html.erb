<style>
    html, body {
        overflow: auto;
        width: 100%;
        padding-left: 20px;
    }
</style>

<%= nested_form_for(@campaign) do |f| %>
    <div style="text-align: center;">
      <h1 style="color:white">Select a Channel</h1>
      <%= select_tag :channel, options_for_select(CalculatedData.where(:campaign_id => 1).map{|i| [Channel.find(i.channel_id).name, i.channel_id]}) %>
      <%= f.submit "Save All", class: "btn btn-danger", style: "margin-top:-7px" %>
      <%= link_to "Cancel", campaign_path(@campaign), class: "btn btn-warning", style: "margin-top:-7px;", id: "editview" %>
    </div>

    <%= f.fields_for :annochannels, @annochannels.compact! do |annochannel| %>
        <div id="graph-container_<%= annochannel.options[:child_index] %>" class="editable-graph-container">
          <div class="menu">
            <div class="controls" id="controls_<%= annochannel.options[:child_index] %>">
              <%= annochannel.fields_for :annotations do |annotation| %>
                  <%= annotation.hidden_field :comment %>
                  <%= annotation.hidden_field :shape %>
                  <%= annotation.hidden_field :posx %>
                  <%= annotation.hidden_field :posy %>
                  <%= annotation.hidden_field :height %>
                  <%= annotation.hidden_field :width %>
                  <%= annotation.hidden_field :class_name %>
                  <%= annotation.link_to_remove "", id: "remover-#{annochannel.options[:child_index]}_#{annotation.options[:child_index]}" %>
              <% end %>
              <%= annochannel.link_to_add image_tag("highlight.png"), :annotations %>
              <%= annochannel.label "Show to Client" %>
              <%= annochannel.check_box :showable %>
            </div>
            <%= annochannel.text_field :header, placeholder: "Put in the title caption for the graph", class: "title-placeholder" %>

          </div>
          <div id="grapher_<%= annochannel.options[:child_index] %>" class="graph-placeholder"></div>
          <%= annochannel.text_area :comment, placeholder: "Put in your comments here", class: "comment-placeholder" %>
        </div>


    <% end %>

<% end %>

<script>
    var plots = [];
    function show_graph(index) {
        $('#channel_' + index).html(gon.channels[index]);
        plots[index] = $.plot("#grapher_" + index, [
                    {
                        label: "Campaign Ad Spots",
                        data: gon.channel_spots[index][1],
                        bars: { show: true, fill: true, align: "center", barWidth: 0.5 }
                    },
                    {
                        label: "TVR",
                        data: gon.channel_slots[index][1],
                        yaxis: 2
                    }
                ],
                {
                    xaxis: {
                        ticks: [
                            0,
                            [ 2, "2AM" ],
                            [ 3, "3AM" ],
                            [ 4, "4AM" ],
                            [ 5, "5AM" ],
                            [ 6, "6AM" ],
                            [ 7, "7AM" ],
                            [ 8, "8AM" ],
                            [ 9, "9AM" ],
                            [ 10, "10AM" ],
                            [ 11, "11AM" ],
                            [ 12, "12PM" ],
                            [ 13, "1PM" ],
                            [ 14, "2PM" ],
                            [ 15, "3PM" ],
                            [ 16, "4PM" ],
                            [ 17, "5PM" ],
                            [ 18, "6PM" ],
                            [ 19, "7PM" ],
                            [ 20, "8PM" ],
                            [ 21, "9PM" ],
                            [ 22, "10PM" ],
                            [ 23, "11PM" ],
                            [ 24, "12AM" ],
                            [ 25, "1AM" ]
                        ]
                    },
                    yaxes: [
                        { max: parseInt(gon.channel_max[index][1]) * 1.8
                        },
                        {
                            // align if we are to the right
                            alignTicksWithAxis: 1,
                            position: "right",
                            min: -0.005
                        }
                    ],
                    legend: { position: "nw" },
                    grid: {
                        hoverable: true,
                        borderWidth: 2,
                        backgroundColor: { colors: ["#ffffff", "#EDF5FF"] }
                    }
                });
        $("#grapher_" + index).UseTooltip();
        $.each($('#controls_' + index).find('.fields'), function (i, elm) {
            create_annotation($(elm), $(elm).find('input').eq(2).val(), $(elm).find('input').eq(3).val(), $(elm).find('input').eq(4).val(), $(elm).find('input').eq(5).val(), $(elm).find('input').eq(0).val(), i,$($(elm).find('input:hidden')[1]).val());
        });
    }
    function create_annotation(field, posx, posy, height, width, comment, counter,shape) {
        var parentid = $(field).parent().attr('id').split("_")[1];
        var fieldid = counter;
        if (counter == "-1") {
            fieldid = $(field).parent().find('.fields').length - 1;
        }

        $(field).attr("id", "anno-" + parentid + "_" + fieldid);
        $('#graph-container_' + parseInt($(field).parent().attr("id").split("_")[1])).append("<div class='"+shape+"' style='left:" + posx + "px;top:" + posy + "px;height:" + height + "px;width:" + width + "px;position:absolute;' id='circle-" + parentid + "_" + fieldid + "'><a href='#' class='canceler btn btn-xs btn-danger' id='cancel-" + parentid + "_" + fieldid + "'>x</a></div>");
        var $circle = $('#circle-' + parentid + "_" + fieldid);
        $circle.append('<textarea class="annotation_field" id="annotationfield-' + parentid + "_" + fieldid + '" placeholder="Put in the comment">' + comment + '</textarea>'+
                       '<select class = "change_circle">'+
                       '<option value="red-circle">Red Circle</option>'+
                       '<option value="blue-circle">Blue Circle</option>'+
                       '<option value="green-circle">Green Circle</option>'+
                       '<option value="red-square">Red Square</option>'+
                       '<option value="blue-square">Blue Square</option>'+
                       '<option value="green-square">Green Square</option>'+
                       '<option value="red-circle-translucent">Red Circle Translucent</option>'+
                       '<option value="blue-circle-translucent">Blue Circle Translucent</option>'+
                       '<option value="green-circle-translucent">Green Circle Translucent</option>'+
                       '<option value="red-square-translucent">Red Square Translucent</option>'+
                       '<option value="blue-square-translucent">Blue Square Translucent</option>'+
                       '<option value="green-square-translucent">Green Square Translucent</option>'+
                       '</select>'+
                       '<a href="#" class="confirmer btn btn-xs btn-danger" id="confirm-' + parentid + "_" + fieldid + '">OK</a>');
//        $circle.append('<textarea class="annotation_field" id="annotationfield-' + parentid + "_" + fieldid + '" placeholder="Put in the comment">' + comment + '</textarea><a href="#" class="confirmer btn btn-xs btn-danger" id="confirm-' + parentid + "_" + fieldid + '">OK</a>');
        $('.change_circle').on("change",function(){
            $circle.removeClass().addClass($(this).val());
            $($(this).parents('.editable-graph-container').find('input:hidden')[1]).val($(this).val());
        });
        var $annocomment = $('#annotationfield-' + parentid + "_" + fieldid);
        var $confirmer = $('#confirm-' + parentid + "_" + fieldid);
        var $canceler = $('#cancel-' + parentid + "_" + fieldid);
        $annocomment.on('focus', function () {
            $confirmer.removeClass('confirmer');
        });
        $annocomment.on('blur', function () {
            $confirmer.addClass('confirmer');
            $annocomment.val($("#anno-" + parentid + "_" + $confirmer.attr("id").split("_")[1]).find('input').eq(0).val());
        });
        $confirmer.on("click", function () {
            var $annotation = $("#anno-" + parentid + "_" + $(this).attr("id").split("_")[1]);
            $annotation.find('input').eq(0).val($annocomment.val());
            $annocomment.blur();
        });
        $canceler.on("click", function () {
            $(this).parent().remove();
            $("#anno-" + parentid + "_" + $confirmer.attr("id").split("_")[1]).find('a').eq(0).click();
        });
        $circle.draggable({
            containment: "parent",
            stop: function (event, ui) {
                var Stoppos = $(this).position();
                var $annotation = $("#anno-" + parentid + "_" + $(this).attr("id").split("_")[1]);
                $annotation.find('input').eq(2).val(Stoppos.left);
                $annotation.find('input').eq(3).val(Stoppos.top);
            }
        });
        $circle.resizable({
            containment: "parent",
            stop: function (event, ui) {
                var $annotation = $("#anno-" + parentid + "_" + $(this).attr("id").split("_")[1]);
                $annotation.find('input').eq(4).val(ui.size.height);
                $annotation.find('input').eq(5).val(ui.size.width);
            }
        });
    }

    var previousPoint = null, previousLabel = null;

    $.fn.UseTooltip = function () {
        $(this).bind("plothover", function (event, pos, item) {
            if (item) {
                if ((previousLabel != item.series.label) || (previousPoint != item.dataIndex)) {
                    previousPoint = item.dataIndex;
                    previousLabel = item.series.label;
                    $("#tooltip").remove();

                    var x = item.datapoint[0];
                    var y = item.datapoint[1];

                    var color = item.series.color;


                    showTooltip(item.pageX,
                            item.pageY,
                            color,
                                    "<strong>" + item.series.label + "</strong><br>" + item.series.xaxis.ticks[x - 1].label + " to " + item.series.xaxis.ticks[x].label + " : <strong>" + y + "</strong>");
                }
            } else {
                $("#tooltip").remove();
                previousPoint = null;
            }
        });
    };

    function showTooltip(x, y, color, contents) {
        $('<div id="tooltip">' + contents + '</div>').css({
            position: 'absolute',
            display: 'none',
            top: y - 40,
            left: x - 120,
            border: '2px solid ' + color,
            padding: '3px',
            'font-size': '9px',
            'border-radius': '5px',
            'background-color': '#fff',
            'font-family': 'Verdana, Arial, Helvetica, Tahoma, sans-serif',
            opacity: 0.9
        }).appendTo("body").fadeIn(200);
    }

    $(function () {

        var channel_first_option_val = $('#channel option:first-child').val();
        $('#graph-container_'+channel_first_option_val).show();
        show_graph(channel_first_option_val);
        $('#channel').on('change', function () {
            var index = parseInt($(this).val())-1;
            //alert(index);
            $('.editable-graph-container').hide();
            $('#graph-container_' + index).fadeIn(function () {
                if (plots[index] == null) {

                    show_graph(index);
                }
            });
        });

        $(document).on('nested:fieldAdded', function (event) {
            var field = event.field;
            create_annotation(field, 250, 100, 100, 100, "", -1,"red-circle");
        });

        $("form").on("keypress", function (e) {
            if (e.keyCode == 13) {
                e.stopPropagation();
            }
        });

    });

</script>

